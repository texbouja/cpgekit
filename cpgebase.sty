\def\filedate{2020/10/01}
\def\fileversion{v0.2alpha}
\def\fileauthor{Sadik Boujaida}

\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{cpgebase}[\filedate\space\fileversion]

\RequirePackage{calc}
\RequirePackage{pgfkeys}
\RequirePackage{etoolbox}
\RequirePackage{xstring}
\RequirePackage{relsize}
\RequirePackage{array}
\RequirePackage[svgnames]{xcolor}
\@ifundefined{NewDocumentCommand}
	{\RequirePackage{xparse}}
	{}

%%%%% Déclarations
\newbox\cpge@boxa
\newbox\cpge@boxb
\newdimen\cpge@dima
\newskip\cpge@skipa
\newtoks\toks@listopts
%% permanents, pour pointillé
\newskip\ligneskip

\newcount\cpge@count
\newcount\cpge@lrcount


\newif\ifbackground
\newif\ifcpge@global
\newif\ifcpge@thetolabel
\newif\ifcpgein@

%%%%% Sauvegarde de certaines dimensions de la classe d'origine.
\edef\topsep@origin{\the\topsep}
\edef\partopsep@origin{\the\partopsep}
\edef\itemsep@origin{\the\itemsep}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% localisation des commandes pgfkeys %%%%%

\ifundef\cpgesetup
{
	\pgfkeysifdefined{/cpge/.is family}{}{\pgfkeys{/cpge/.is family}}
	\NewDocumentCommand\cpgesetup{o}{%
      \IfValueT{#1}
   	   {\pgfkeysifdefined{/cpge/#1/.is family}{}
			   {\pgfkeys{/cpge/#1/.is family}}}%
      \IfValueTF{#1}{\pgfqkeys{/cpge/#1}}{\pgfqkeys{/cpge}}%
   }
}{}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% gestion des erreurs %%%%%
\DeclareRobustCommand\cpgeb@error[2]{%
	\PackageError{cpgebase}{#1}{#2}}
\DeclareRobustCommand\cpgeb@warning[2]{%
	\PackageWarning{cpgebase}{#1}{#2}}


\ifundef\cpgeaddkeyword{%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% Commandes utilitaires multi-usage %%%%%
\def\cslocal{%
	\let\lorg@cslet=\cslet%
	\let\lorg@csletcs=\csletcs%
	\let\lorg@def=\def%
	\let\lorg@edef=\edef%
	\let\lorg@csdef=\csdef%
	\let\lorg@csedef=\csedef%
	\let\lorg@listadd=\listadd%
	\let\lorg@listeadd=\listeadd%
	\let\lorg@listcsadd=\listcsadd%
	\let\lorg@listcseadd=\listcseadd%
	\let\lorg@csappto=\csappto%
	\let\lorg@cseappto=\cseappto%
	\let\lorg@appto=\appto%
	\let\lorg@eappto=\eappto%
}
\def\csglobal{%
	\begingroup\cpge@globaltrue%
	\def\lorg@cslet{\global\cslet}%
	\def\lorg@csletcs{\golbal\csletcs}%
	\let\lorg@def=\gdef%
	\let\lorg@edef=\xdef%
	\let\lorg@csdef=\csgdef%
	\let\lorg@csedef=\csxdef%
	\let\lorg@listadd=\listgadd%
	\let\lorg@listeadd=\listxadd%
	\let\lorg@listcsadd=\listcsgadd%
	\let\lorg@listcseadd=\listcsxadd%
	\let\lorg@csappto=\csgappto%
	\let\lorg@cseappto=\csxappto%
	\let\lorg@appto=\gappto%
	\let\lorg@eappto=\xappto%
}
\def\endcslorg{\ifcpge@global\endgroup\fi}
\cslocal
\def\undef@afterexec#1{\ifdefvoid{#1}{\relax}{#1}\gundef{#1}}
\def\csundef@afterexec#1{\csuse{#1}\csgundef{#1}}
\def\cpge@removestar#1*{#1}
\def\cpge@removeplus#1+{#1}
\def\cpge@erasestar*#1+{#1}
\def\if@staratend#1{
	\def\in@@{\in@{*!}}%
	\@xp\in@@\@xp{#1!}%
	\ifin@%
		\edef\x@arg{\cpge@removestar#1}\expandafter\@firstoftwo%
	\else%
		\def\x@arg{#1}\expandafter\@secondoftwo%
	\fi%
}
\def\if@plusatend#1{
	\def\in@@{\in@{+!}}%
	\@xp\in@@\@xp{#1!}%
	\ifin@%
		\edef\x@arg{\cpge@removeplus#1}\expandafter\@firstoftwo%
	\else%
		\def\x@arg{#1}\expandafter\@secondoftwo%
	\fi%
}
\newcommand\cpgesetdeco{\@ifstar\cpge@deco@\cpge@deco}
\long\def\cpge@deco#1#2{%
   \long\csdef{deco@#1}##1{\begingroup#2\endgroup}}
\long\def\cpge@deco@#1#2{%
   \long\csdef{deco@#1}{#2}}
\long\def\usedeco#1{\csuse{deco@#1}}
\cpgesetdeco*{simple}{\fbox}
\DeclareDocumentCommand\cpgename{smm}{%
	\IfBooleanT{#1}{\csglobal}%
	\lorg@csdef{name@#2}{#3}%
	\endcslorg
}
\DeclareDocumentCommand\cpgexname{smm}{%
	\IfBooleanT{#1}{\csglobal}%
	\lorg@csedef{name@#2}{#3}%
	\endcslorg%
}
\cpgesetup[decorations]{
   .unknown/.code=\cpgesetdeco{\pgfkeyscurrentname}{#1}
}
\def\cpgethe#1{\ifnum\value{#1}>\z@\csuse{the#1}.\fi}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% base de la gestion des mots clés entre ||  %%%%%

%%%%% Commandes pour le parsing des elements
\DeclareListParser*{\OutParser}{|}
%% \OutParser{\cmd}{item1|item2|...} retourne la séquence
%% \cmd{item1}\cmd{item2}...
\DeclareListParser*{\in@parser}{+}
%% \in@parser{\cmd}{item1+item2+...} retourne la séquence
%% \cmd{item1}\cmd{item2}...
\def\DoubleParser#1#2#3{%
	\def\tmp@parser##1{#1{\in@parser{#2}{##1}}}%
	\OutParser{\tmp@parser}{#3}%
}
%% \DoubleParser{\cmd1}{\cmd2}{1a+1b|2a+2b+2c|...} retourne la sequence 
%% \cmd1{\cmd2{1a}\cmd2{1b}}\cmd1{\cmd2{2a}\cmd2{2b}\cmd2{2c}}...

\DeclareDocumentCommand\csvtolistcsadd{smm}{%
   \IfBooleanT{#1}{\csglobal}%
   \def\do{\forcsvlist{\lorg@listcsadd{#2}}}
   \expandafter\docsvlist\expandafter{#3}
   \endcslorg%
}
\DeclareDocumentCommand\csvtolistcseadd{smm}{%
   \IfBooleanT{#1}{\csglobal}%
   \def\do{\forcsvlist{\lorg@listcseadd{#2}}}
   \expandafter\docsvlist\expandafter{#3}
   \endcslorg%
}
\DeclareDocumentCommand\csvtolistadd{smm}{%
   \IfBooleanT{#1}{\csglobal}%
   \def\do{\forcsvlist{\lorg@listadd{#2}}}
   \expandafter\docsvlist\expandafter{#3}%
   \endcslorg%
}
\DeclareDocumentCommand\csvtolisteadd{smm}{%
   \IfBooleanT{#1}{\csglobal}%
   \def\do{\forcsvlist{\lorg@listeadd{#2}}}
   \expandafter\docsvlist\expandafter{#3}%
   \endcslorg%
}
%%% Gestion de listes CSV
\newrobustcmd{\csvadd}[2]{%
  \ifblank{#2}{}{\appto#1{#2,}}}
\newrobustcmd{\csveadd}[2]{%
  \begingroup
  \edef\cpgeb@tempa{\endgroup\noexpand\ifblank{#2}}%
  \cpgeb@tempa{}{\eappto#1{#2,}}}
\newrobustcmd{\csvgadd}[2]{%
  \ifblank{#2}{}{\gappto#1{#2,}}}
\newrobustcmd{\csvxadd}[2]{%
  \begingroup
  \edef\cpgeb@tempa{\endgroup\noexpand\ifblank{#2}}%
  \cpgeb@tempa{}{\xappto#1{#2,}}}
\newrobustcmd{\csvcsadd}[1]{%
  \expandafter\csvadd\csname#1\endcsname}
\newrobustcmd{\csvcseadd}[1]{%
  \expandafter\csveadd\csname#1\endcsname}
\newrobustcmd{\csvcsgadd}[1]{%
  \expandafter\csvgadd\csname#1\endcsname}
\newrobustcmd{\csvcsxadd}[1]{%
  \expandafter\csvxadd\csname#1\endcsname}
\newrobustcmd{\csvremove}[2]{%
  \cpgeb@csvremove{#1}{#2}\def}
\newrobustcmd{\csvgremove}[2]{%
  \cpgeb@csvremove{#1}{#2}\gdef}
\long\def\cpgeb@csvremove#1#2#3{%
  \ifblank{#2}
    {}
    {\ifincsv{#2}{#1}{%
     \begingroup
     \def\cpgeb@tempa##1,#2,##2&{\endgroup
       \expandafter#3\expandafter#1\expandafter{\@gobble##1,##2}}%
    \expandafter\cpgeb@tempa\expandafter,#1&}{}}%
}
\newrobustcmd{\csvcsremove}[1]{%
  \expandafter\csvremove\csname#1\endcsname}
\newrobustcmd{\csvcsgremove}[1]{%
  \expandafter\csvgremove\csname#1\endcsname}
\newrobustcmd{\ifincsv}[2]{%
  \begingroup
  \def\cpgeb@tempa##1,#1,##2&{\endgroup
    \ifblank{##2}\@secondoftwo\@firstoftwo}%
  \expandafter\expandafter\expandafter\cpgeb@tempa
  \expandafter\expandafter\expandafter,\expandafter\zap@space#2 \@empty,#1,&}
\newrobustcmd{\xifincsv}[1]{%
  \begingroup
  \edef\cpgeb@tempa{\endgroup\ifincsv{#1}}%
  \cpgeb@tempa}
\newrobustcmd{\ifincsvcs}[2]{%
  \expandafter\cpgeb@ifincsvcs@i\csname #2\endcsname{#1}}
\long\def\cpgeb@ifincsvcs@i#1#2{\ifincsvcs{#2}{#1}}
\newrobustcmd{\xifincsvcs}[1]{%
  \begingroup
  \edef\cpgeb@tempa{\endgroup\ifincsvcs{#1}}%
  \cpgeb@tempa}
%% ajoute les éléments de #2 (separe par des virgules)
%% a la liste interne \list@#1
\DeclareDocumentCommand\cpgeaddkeyword{st+m+m+m}{%
	\csvtolistcsadd{list@#3}{#4}%
	\IfBooleanT{#1}{\csglobal}%
	\IfBooleanTF{#2}{\long\lorg@csdef{#3@#4}##1{#5}}{\long\lorg@csdef{#3@#4}{#5}}%
	\endcslorg%
}}{}

%% \cpgeaddkeyword{<name>}{<elt>}{<texte>}
%% ajoute <elt> a la liste \list@name et affecte 
%% le code <texte> a la commande sans 
%% parametre \name@elt
%% \cpgeaddkeyword+{<name>}{<elt>}{<texte>}
%% ajoute <elt> a la liste \list@name et affecte 
%% le code <texte> a la commande \name@elt  
%% avec un seul parametre 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%% Gestion des metadonnées %%%%%



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% utilitaires de gestion des compteurs façon cpgebase %%%%%


\def\MO@rdinal#1{%
   \ifcase#1%
   \or Premier \or Deuxi\`eme \or Troisi\`eme \or Quatri\`eme
    \or Cinqui\`eme \or Sixi\`eme \or Septi\`eme \or Huiti\`eme
     \or  Neuvi\`eme \else\@ctrerr\fi}
\def\MOrdinal#1{\expandafter\MO@rdinal\csname c@#1\endcsname}
\def\FO@rdinal#1{%
   \ifcase#1%
   \or Premi\`ere \or Deuxi\`eme \or Troisi\`eme \or Quatri\`eme
    \or Cinqui\`eme \or Sixi\`eme \or Septi\`eme \or Huiti\`eme
     \or  Neuvi\`eme \else\@ctrerr\fi}
\def\FOrdinal#1{\expandafter\FO@rdinal\csname c@#1\endcsname}
\def\mo@rdinal#1{%
   \ifcase#1%
   \or premier \or deuxi\`eme \or troisi\`eme \or quatri\`eme
    \or cinqui\`eme \or sixi\`eme \or septi\`eme \or huiti\`eme
     \or  neuvi\`eme \else\@ctrerr\fi}
\def\mordinal#1{\expandafter\mo@rdinal\csname c@#1\endcsname}
\def\fo@rdinal#1{%
   \ifcase#1%
   \or premi\`ere \or deuxi\`eme \or troisi\`eme \or quatri\`eme
    \or cinqui\`eme \or sixi\`eme \or septi\`eme \or huiti\`eme
     \or  neuvi\`eme \else\@ctrerr\fi}
\def\fordinal#1{\expandafter\fo@rdinal\csname c@#1\endcsname}

%%% cree les listes 
% \list@count=tous les raccourcis, 
% \list@readonly = non modifiables 
% \list@active=raccourcis "actifs"
\csvtolistcsadd{list@count}{1,a,A,i,I,M,F,m,f,s,S,C,q,Q,p,P,e,R,X}
\csvtolistcsadd{list@active}{M,F,m,f,1,a,A,i,I}
\csvtolistcsadd{list@readonly}{M,F,m,f,1,a,A,i,I,q,Q,e,C}

%%% Définition des commandes qui se substituent aux raccourcis dans \list@readonly

%%%%% Hack en attendant de trouver la source de l'erreur \@ctrerr
\def\cpgealph#1{\expandafter\cpge@alph\csname c@#1\endcsname}
\def\cpgeAlph#1{\expandafter\cpge@Alph\csname c@#1\endcsname}
\def\cpge@alph#1{%
  \ifcase#1\or a\or b\or c\or d\or e\or f\or g\or h\or i\or j\or
   k\or l\or m\or n\or o\or p\or q\or r\or s\or t\or u\or v\or w\or x\or
    y\or z\fi}
\def\cpge@Alph#1{%
  \ifcase#1\or A\or B\or C\or D\or E\or F\or G\or H\or I\or J\or
   K\or L\or M\or N\or O\or P\or Q\or R\or S\or T\or U\or V\or W\or X\or
    Y\or Z\fi}
%%%%%

\begingroup
\def\tmp@do#1#2{\csgdef{count@#1}{#2}}
\def\do@do#1{\tmp@do#1}
\forcsvlist{\do@do}{{1}{\arabic},
                     {a}{\cpgealph},
                     {A}{\cpgeAlph},
                     {i}{\roman},
                     {I}{\Roman},
                     {F}{\FOrdinal},
                     {M}{\MOrdinal},
                     {m}{\mordinal},
                     {f}{\fordinal}
                  }
\def\tmp@do#1#2{\csgdef{count@#1}##1{#2}}
\forcsvlist{\do@do}{%
					{q}{\theenumii},
					{Q}{\theenumi},
					{s}{\thesubsection},
					{S}{\thesection},
					{C}{\thechapter},
					{e}{\theequation},
				}
\endgroup

\ifundef{\c@chapter}{\let\thechapter\relax}{}

%\def\nocountertoolargemessage{\let\@ctrerr\relax}

%%%%% Command utilisateur \cpgedefcounter

\DeclareDocumentCommand\cpge@cnt@shortcut{smm}{%
 \in@{!*}{!#2}%
  \ifin@\edef\cshr@{\expandafter\cpge@erasestar#2+}\else\edef\cshr@{#2}\fi
 \xifinlist{\cshr@}{\list@readonly}{\cpgein@true}{}%
 \IfBooleanT{#1}{\cpgein@false}%
 \ifcpgein@%
	\cpgeb@error{impossible de créer le raccourci \cshr@. 
			  \MessageBreak Il est affecté à un compteur système}
			  {le raccourci #2 sera ignoré, 
			  \messageBreak il n'est pas sûr que tout fonctionne ensuite}%
 \else%
      \ifin@\csundef{count@\cshr@}\fi
       \ifcsundef{count@\cshr@}
             {\xifinlist{\cshr@}{\list@count}{}{\listxadd{\list@count}{\cshr@}}%
               \csgdef{count@\cshr@}##1{\csuse{the#3}}}
	         {\cpgeb@error{Le raccourci #2 est pris.}
				        {Vous pouvez l'écraser avec (*#2)}}%
\fi}
 
% {} = name, [] = within list, () = shortcut, <> = label numbering format
\DeclareDocumentCommand\cpgedefcounter{mm o d() d<>}{%
\@bsphack\begingroup
   \def\cpge@tmpa{#2}
   \ifx\cpge@tmpa*
      \global\cslet{label@#1}\relax
   \else 
      \IfValueT{#4}{\cpge@cnt@shortcut{#4}{#1}}
      \ifcpgein@\else
         \ifltxcounter{#1}{}{\newcounter{#1}}
         \ifblank{#2}{\cpgesetlabel*{#1}{|1|}}{\cpgesetlabel*{#1}{#2}}
         \IfValueT{#3}
            {\def\do##1{\counterwithin*{#1}{##1}}\docsvlist{#3}}
         \IfValueT{#5}{\csdef{p@#1}{#5}}
      \fi
   \fi
\endgroup\@esphack}

%%%%% commande utilisateur \cpgesetlabel

\def\single@count@change#1#2{\begingroup%
 \exploregroups\expandarg%
% \expandafter\StrSubstitute\expandafter%
%   {\csname label@#1\endcsname}
%   {|#2|}
	\def\StrSubstitute@expansion{%
	\expandafter\StrSubstitute\expandafter%
	 {\csname label@#1\endcsname}%
	 {|#2|}%
	}
	\expandafter\StrSubstitute@expansion\expandafter%
   		{\csname count@#2\endcsname{#1}}
   		[\tmp@string]%
   \global\let\tmp@string@\tmp@string%
   \endgroup
  \expandafter\ifx\csname label@#1\endcsname\tmp@string@\else%
     \ifinlist{#2}{\list@active}
       {\lorg@csedef{the#1}{%
         \expandafter\expandafter\expandafter\noexpand%
         	\csname count@#2\endcsname{#1}}%
       }{}%
       \lorg@cslet{label@#1}\tmp@string@%
       %\lorg@cslet{theH#1}\tmp@string@%
  \fi%
 } 
\def\count@parser#1#2{%
   \csdef{label@#1}{#2}%
   \def\tmp@for{\single@count@change{#1}}%
   \forlistloop{\tmp@for}{\list@count}%
   \ifcpge@thetolabel\makethetolabel{#1}\fi%
   \endcslorg%
   }
\newcommand\cpgesetlabel{\@ifstar{\csglobal\count@parser}{\count@parser}}
\let\allthetolabel\cpge@thetolabeltrue
\DeclareDocumentCommand\makethetolabel{sm}{%
	\IfBooleanT{#1}{\csglobal}
	\lorg@csedef{the#2}{\expandafter\expandonce\csname label@#2\endcsname}%
	\endcslorg%
}




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%% Environnements de type list %%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% Patch de la commande \item pour qu'elle supporte 
%%% sa présence dans un environnement et qu'elle
%%% ne produise ni numéro ni espaces en cas 
%%% d'un argument optionnel vide. 
\def\cpge@item{%
  \@inmatherr\item%
  \@ifnextchar[\@item@ques{\@noitemargtrue \@item@ques[\@itemlabel]}%
}
\def\@item@ques[#1]{%
 \@hyper@itemtrue %appliquer d'avance le patch hyperref normal
  \if@noparitem
    \@donoparitem
  \else
    \if@inlabel
      \indent \par
    \fi
    \ifhmode
      \unskip\unskip \par
    \fi
    \if@newlist
      \if@nobreak
        \@nbitem
      \else
        \addpenalty\@beginparpenalty
        %\addvspace\@topsep
        %\addvspace{-\parskip}%
		\ifblank{#1}{}{\addvspace{\@topsep}\addvspace{-\parskip}}% patched
      \fi
    \else
      \addpenalty\@itempenalty
      %\addvspace\itemsep
	  \ifblank{#1}{}{\addvspace\itemsep}% patched
    \fi
    \global\@inlabeltrue
  \fi
  \everypar{%
    \@minipagefalse
    \global\@newlistfalse
    \if@inlabel 
      \global\@inlabelfalse
      {\setbox\z@\lastbox
       \ifvoid\z@
         \kern-\itemindent
       \fi}%
      \box\@labels
      \penalty\z@
   	\fi 
    \if@nobreak
      \@nobreakfalse
      \clubpenalty \@M
    \else
      \clubpenalty \@clubpenalty
      \everypar{}%
    \fi}%
  \if@noitemarg
    \@noitemargfalse
    \if@nmbrlist
      \refstepcounter\@listctr
    \fi
  \fi
  \sbox\@tempboxa{\makelabel{#1}}%
  \global\setbox\@labels\hbox{%
    \unhbox\@labels
    \hskip \itemindent
    \hskip -\labelwidth
    \hskip -\labelsep
    \ifdim \wd\@tempboxa >\labelwidth
      \box\@tempboxa
    \else
      \hbox to\labelwidth {\unhbox\@tempboxa}%
    \fi
    \ifblank{#1}{\hskip\z@}{\hskip \labelsep}}% patched
	%\hskip\labelsep}%
  \ignorespaces}
  
%% Fin du patch

%%%% Options de gestion des espaces pour les \item
%%% clés pour marge, saut vertical et aligenement du label
%%% ne doivent pas être utilisées directement
\pgfkeys{/pgf/key filters/active families/.install key filter}
\cpgesetup[@lists]{%
   marge/.code=\cpgelist@setmarge{1}{#1},
   marge/.default=\z@,
   marge+/.code=\cpgelist@setmarge{0}{#1},
   marge+/.default=\z@,
   marge*/.code=\cpgelist@setmargealt{#1},
   marge*/.default=\z@,
   saut/.code=\cpgelist@setsep{#1},
   saut/.default=\itemsep@origin,
   align/.code=\cpgelist@setalign{#1},
   align/.default=r,
}
\def\cpgesetup@lists#1{%
   \pgfqkeys{/cpge/@lists}{#1}%
}
%%% les commandes suivantes 
%%% ne devraient être utilisées qu'une fois la boite
%%% \@tempboxa préparée avec un échantillon de numéro.
%%% c'est la commande \cpgelist@setprop qui veille à l'exécution
%%% de toute la séquence dans le bon ordre.
%%% Elle même n'est exécutée que lorsqu'une liste
%%% est sur le point d'être initiée.
\def\listmaxwidth{30\p@}
\def\cpgelist@setmarge#1#2{%
   \ifcsundef{marge@\cpge@listctr}% une fois exécutée, ignore les clés suivantes
      {\labelsep=.33em%
         \csname leftmargin\cpge@listlevel\endcsname=%
            \dimexpr\processed@labelwidth+\labelsep+#2\relax%
         \if#11\relax
         \ifdim\csname leftmargin\cpge@listlevel\endcsname >
            \listmaxwidth\relax%
               \csname leftmargin\cpge@listlevel\endcsname=
                  \dimexpr.5\processed@labelwidth+#2\relax%
         \fi\fi%
         \csdef{marge@\cpge@listctr}{%une fois exécutée, ignore les clés suivantes
            \labelwidth\dimexpr
               \csname leftmargin\cpge@listlevel\endcsname
               -\labelsep\relax%
            \itemindent\z@%
            \listparindent\z@%
            }%
      }{}%
}
\def\cpgelist@setmargealt#1{%
   \ifcsundef{marge@\cpge@listctr}%une fois exécutée, ignore les clés suivantes
      {\labelsep=.5em%
         \csname leftmargin\cpge@listlevel\endcsname=
            \dimexpr#1\relax%
         \csdef{marge@\cpge@listctr}{%
               \labelwidth\z@\relax
               \itemindent\labelsep\relax
               \listparindent\z@%
            }%
      }{}%
}
\def\cpgelist@setsep#1{%
   \ifcsundef{saut@\cpge@listctr}%une fois exécutée, ignore les clés suivantes
      {\csdef{saut@\cpge@listctr}{%
         \cpge@skipa=#1%
         \addtolength\topsep{\cpge@skipa}%
         \addtolength\itemsep{\cpge@skipa*\real{.5}}}%
         \addtolength\parsep{\cpge@skipa*\real{.5}}%
      }{}%
}
\let\left@listfil\hfil
\let\right@listfil\relax
\def\cpgelist@setalign#1{%
   \ifcsundef{align@\cpge@listctr}{%
      \if#1r 
      \csdef{align@\cpge@listctr}{%b
         \let\right@listfil\relax%
         \let\left@listfil\hfil}%
      \else
         \if#1l 
            \csdef{align@\cpge@listctr}{%
               \let\right@listfil\hfil%
               \let\left@listfil\relax}%
         \else
            \if#1c
               \csdef{align@\cpge@listctr}{%
                  \let\left@listfil\hfil%
                  \let\right@listfil\hfil}%
            \fi%
         \fi%
      \fi%
 }{}}

\NewDocumentCommand\cpgelist@addprop{ s mm }{
   \IfBooleanT{#1}{\csdef{prop@#2}{}}
      \cspreto{prop@#2}{#3,}%
}
%%% Commandes utilisateur pour configurer marge, saut vertical et 
%%% alignement du label.
%%% Ne font que stocker tels quels les couples key=val dans des macros
%%% et celles-ci ne seront utilisées que lors de l'initialisation  
%%% d'une liste (par \cpgelist@setprop)
\NewDocumentCommand\cpgesetenum{ s mm }{%
   \IfBooleanT{#1}{\csdef{prop@enum\romannumeral#2}{}}%
   \ifnum\numexpr#2>\z@%
       \cspreto{prop@enum\romannumeral#2}{#3,}%
   \else%
      \def\tmp@for##1{\cspreto{prop@enum\romannumeral##1}{#3,}}%
      \forcsvlist{\tmp@for}{1,2,3}%
   \fi%
}
\NewDocumentCommand\cpgesetitem{ s mm }{%
   \IfBooleanT{#1}{\csdef{prop@item\romannumeral#2}{}}%
   \ifnum\numexpr#2>\z@%
       \cspreto{prop@item\romannumeral#2}{#3,}%
   \else%
      \def\tmp@for##1{\cspreto{prop@item\romannumeral##1}{#3,}}%
      \forcsvlist{\tmp@for}{1,2,3}%
   \fi%
}
%%% Initialisation des paramètres par défaut.
\def\prop@enumi{marge}
\def\prop@enumii{marge*} 
\def\prop@enumiii{marge}
\def\prop@itemi{marge=1pc}
\def\prop@itemii{marge=1pc}
\def\prop@itemiii{marge=1pc}                             
\newdimen\@maxlabelwidth
\newdimen\processed@labelwidth
\def\cpgelist@setprop{%
   \ifcsdef{c@\cpge@listctr}
      {\csname c@\cpge@listctr\endcsname13\relax}%
      {}
   \setbox\@tempboxa\hbox{\color@begingroup%
      \outeremptydeco@list{}%
         \color@endgroup}
   \edef\curr@emtydecowidth{\the\wd\@tempboxa}
   \setbox\@tempboxa\hbox{\color@begingroup%
      \csuse{deco@\cpge@listctr}{\csuse{label@\cpge@listctr}}% 
      \color@endgroup}%
   \edef\curr@textwidth{\the\wd\@tempboxa}
   \processed@labelwidth=\dimexpr\curr@textwidth+\curr@emtydecowidth\relax%
   \ifdim\@maxlabelwidth<\curr@textwidth\relax%
      \global\@maxlabelwidth=\curr@textwidth%
   \fi%
   \begingroup
   \edef\cpge@tempa{\endgroup%
      \noexpand\cpgesetup@lists{\csuse{prop@\cpge@listctr}}%
      }%
   \cpge@tempa%
}   
\def\cpgelist@builder{%
   \cpgelist@setprop% calcule \leftmargin et définit \sep@... , \marge@... 
   \expandafter%
   \list
   \csname label@\cpge@listctr\endcsname%
        {\usecounter{\cpge@listctr}%
          \csuse{sep@\cpge@listctr}%
           \csuse{marge@\cpge@listctr}%
            \csuse{saut@\cpge@listctr}%
             \csuse{align@\cpge@listctr}%
          \def\makelabel{\cpge@makelabel}%%
        }%
   }
\def\cpgelist@builder@star{%
   \let\outeremptydeco@list\deco@fake%
   \let\outerdeco@list\deco@fake%
   \cpgelist@setprop%
   \expandafter
   \list
   \csname label@\cpge@listctr\endcsname%
        {\csuse{sep@\cpge@listctr}%
          \csuse{marge@\cpge@listctr}%
           \csuse{saut@\cpge@listctr}%
            \csuse{align@\cpge@listctr}%
         \let\makelabel\cpge@makelabel%
        }
   }
\def\cpge@makelabel#1{%
   \ifblank{#1}{}{%
      \null\left@listfil%
         \outerdeco@list{\csuse{deco@\cpge@listctr}{#1}}%
      \right@listfil\null%
   }%
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Ajouts 9/12/23 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% interface utilisateur plus conforme à l'orientation globale 
\newif\ifenum@resume
\newif\ifenum@restore 
\def\deco@fake#1{#1}
\def\outerdeco@list#1{#1}
\def\outeremptydeco@list#1{#1}
\def\cpgelist@outerr#1{
   \ifundef\cpge@listenv{
      \cpgeb@error{#1 n'est pas directement utilisable 
                     avec \string\cpgesetuplists.}
                  {utiliser l'une des familles enumi}
   }{}
}
\ProvideDocumentCommand\cpgelist@addlocalprop{smm}{
   \cpgelist@outerr{#2}   
   \IfBooleanTF{#1}
      {\cpgelist@addprop*{\cpge@listctr}{#3}}%
      {\cpgelist@addprop{\cpge@listctr}{#3}}%
}
\def\cpgelist@savecounter{%
	\csnumgdef{last@\cpge@listctr}{\value{\cpge@listctr}}%
}
\def\cpgelist@save#1{%
   \unless\ifenum@restore%
      \@xp\toks@listopts\@xp{\the\toks@listopts,#1}%
   \fi%
}

\def\cpgesetuplists{\cpgesetup[lists]}
\cpgesetuplists{%
   preload/.is family,
   preload/restore/.is if=enum@restore,
   preload/resume/.is if=enum@resume,
   preload/r/.style={/cpge/lists/preload, resume, restore},
   preload/r*/.style={/cpge/lists/preload, resume=false, restore},
   preload/.unknown/.code=\relax,
   resume/.code=\relax,
   restore/.code=\relax,
   r/.code=\relax,
   r*/.code=\relax

}
\cpgesetuplists{%
   custom counter/.code={%
      \cpgelist@outerr{cc}%
      \ifltxcounter{#1}{}{\cpgedefcounter{#1}{}}%
      \def\cpge@listctr{#1}%
   },
   cc/.style={custom counter=#1},
   label prefix/.code=\def\cpge@enumlabelprefix{#1},
   p/.style={label prefix=#1},
   n/.code=\cpgelist@outerr{n}\cpgesetlabel{\cpge@listctr}{#1}\cpgelist@save{n=#1},
   n*/.code=\cpgelist@outerr{n*}\cslet{deco@\cpge@listctr}\deco@fake%
             \cpgesetlabel{\cpge@listctr}{#1}\cpgelist@save{n*=#1},
   d*/.code=\cpgelist@outerr{d}\cpgesetdeco*{\cpge@listctr}{#1}\cpgelist@save{d=#1},
   d/.code=\cpgelist@outerr{d*}\cpgesetdeco{\cpge@listctr}{#1}\cpgelist@save{d*=#1},
   m/.code=\cpgelist@addlocalprop{m}{marge=#1}\cpgelist@save{m=#1},
   m+/.code=\cpgelist@addlocalprop{m+}{marge+=#1}\cpgelist@save{m+=#1},
   m*/.code=\cpgelist@addlocalprop{m*}{marge*=#1}\cpgelist@save{m*=#1},
   s/.code=\cpgelist@addlocalprop{s}{saut=#1}\cpgelist@save{s=#1}, 
   a/.code=\cpgelist@addlocalprop{a}{align=#1}\cpgelist@save{a=#1},
   c/.style={},
   m/.default=\z@,
   m+/.default=\z@,
   m*/.default=\z@,
   s/.default=\z@,
   a/.default=r
}
\def\cpgesetup@enum#1#2{
   \cpgesetuplists{
      enum@#1/.is family,
      enum@#1/n/.code=\cpgesetlabel{enum#1}{##1},
      enum@#1/n*/.code=\cslet{deco@enum#1}\deco@fake
                       \cpgesetlabel{enum#1}{##1},
      enum@#1/d/.code=\cpgesetdeco{enum#1}{##1},
      enum@#1/d*/.code=\cpgesetdeco*{enum#1}{##1},
      enum@#1/m/.code=\cpgesetenum{#2}{marge=##1},
      enum@#1/m+/.code=\cpgesetenum{#2}{marge+=##1},
      enum@#1/m*/.code=\cpgesetenum{#2}{marge*=##1},
      enum@#1/s/.code=\cpgesetenum{#2}{saut=##1},
      enum@#1/a/.code=\cpgesetenum{#2}{align=##1},
      enum@#1/a/.default=r,
      enum@#1/m/.default=\z@,
      enum@#1/m+/.default=\z@,
      enum@#1/m*/.default=\z@,
      enum@#1/s/.default=\z@,
      enum#1/.code=\pgfqkeys{/cpge/lists/enum@#1}{##1},
}}
\cpgesetup@enum{i}{1}
\cpgesetup@enum{ii}{2}
\cpgesetup@enum{iii}{3}
\cpgesetup@enum{iv}{4}

\def\cpgesetup@item#1#2{
   \cpgesetuplists{
      item@#1/.is family,
      item@#1/n/.store in=\csname label@item#1\endcsname,
      item@#1/n*/.code=\cslet{deco@item#1}\deco@fake%
                       \csdef{label@item#1}{##1},
      item@#1/d/.code=\cpgesetdeco{item#1}{##1},
      item@#1/d*/.code=\cpgesetdeco*{item#1}{##1},
      item@#1/m/.code=\cpgesetitem{#2}{marge=##1},
      item@#1/m*/.code=\cpgesetitem{#2}{marge*=##1},
      item@#1/s/.code=\cpgesetitem{#2}{saut=##1},
      item@#1/a/.code=\cpgesetitem{#2}{align=##1},
      item@#1/a/.default=r,
      item@#1/m/.default=\z@,
      item@#1/m*/.default=\z@,
      item#1/.code=\pgfqkeys{/cpge/lists/item@#1}{##1},
   }
}
\cpgesetup@item{i}{1}
\cpgesetup@item{ii}{2}
\cpgesetup@item{iii}{3}
\cpgesetup@item{iv}{4}


\cpgesetup[lists]{local/.is family, local/.cd, t/.store in=\local@item, .unknown/.code=\relax}

\NewDocumentCommand\xenum{ e\op}{%
   \def\cpge@listenv{enum}
   \def\cpge@xlistenv{xenum}
   \ifnum \@enumdepth >2 \@toodeep\else%
      \advance\@enumdepth\@ne%
      \edef\cpge@listdepth{\the\@enumdepth}
      \edef\cpge@listlevel{\romannumeral\@enumdepth}%
      \edef\cpge@listctr{enum\cpge@listlevel}%
   \fi%
   \let\outeremptydeco@list\relax% pour les niveaux imbriqués
   \IfValueT{#1}{%
      \cpgesetuplists{preload,#1}%
      \ifenum@restore%
         \csuse{setlastopts@\cpge@listctr}%
         \enum@restorefalse%
      \else
         \toks@listopts{}%
         \cpgesetuplists{#1}%
         \csxdef{setlastopts@\cpge@listctr}%
            {\@nx\cpgesetuplists{\the\toks@listopts}}%
      \fi%
   }
   \cpgelist@builder%
   \ifenum@resume%
      \csname c@\cpge@listctr\expandafter\endcsname
       \csname last@\cpge@listctr\endcsname\relax%
        \enum@resumefalse% pour les niveaux imbriqués
   \fi%
 }
 \def\endxenum{\cpgelist@savecounter\endlist}
 \NewDocumentCommand\xitem{ e\op }{%
  \def\cpge@listenv{item}
  \def\cpge@xlistenv{xitem}
  \ifnum \@itemdepth >2 \@toodeep\else%
      \advance\@itemdepth\@ne%
      \edef\cpge@listdepth{\the\@itemdepth}
      \edef\cpge@listlevel{\romannumeral\@itemdepth}%
      \edef\cpge@listctr{item\cpge@listlevel}%
  \fi%
  \IfValueT{#1}{\cpgesetup[lists]{#1}}%
  \cpgelist@builder@star%
 }
\let\endxitem\endlist
\NewDocumentCommand\init@xlist{mm !t- !t- !t- !t\r !t+  !E{\op}{{}} }{
	\IfBooleanTF{#6}%
        {\begin{#1}\op{r,#8}}
        {\IfBooleanT{#7}{\begin{#1}\op{#8}}}%
	\IfBooleanT{#3}{\exit-\IfBooleanT{#4}{\exit-\IfBooleanT{#5}{\exit-}}}%
	\let\xit#2\xit%
}
\cpgesetdeco{itemtitle}{\bfseries\boldmath #1.\enskip}
\NewDocumentCommand\xit@enum{!o !d() !d<>}{%
      \IfValueTF{#1}
         {\if@staratend{#1}%
            {\cpgeref@setcounter{\cpge@listctr}{\x@arg-1}\item}%
            {\if@plusatend{#1}%
               {\cpgeref@addtocounter{\cpge@listctr}{\x@arg-1}\item}%
               {\item[#1]}%
            }}
         {\item}%
      \IfValueT{#2}
         {\deco@itemtitle{#2}\protected@edef\@currentlabelname{#2}}%
      \IfValueT{#3}
         {\label{\cpge@enumlabelprefix#3}}%
 }
\def\xitenum{\init@xlist{xenum}\xit@enum}
\NewDocumentCommand\xit@item{!o !E{\zap}{{@}} !d() !d<>}{%
   \IfValueTF{#1}
      {\item[\csuse{deco@\cpge@listctr}{#1}]}%
      {\item}
   \IfValueT{#3}{\deco@itemtitle{#3}}%
   \IfValueT{#4}{
      \phantomsection%
      \protected@edef\@currentlabelname{#3}%
      \label{\cpge@enumlabelprefix#4}%
   }
}
\def\xititem{\init@xlist{xitem}\xit@item}

\NewDocumentCommand\xit@tab{!o !E{\zap}{{@}} !d() !d<>}{%
   \tabitem%
   \IfValueT{#4}{\label{\cpge@enumlabelprefix#4}}%
}
\def\xittab{\init@xlist{tabenum}\xit@tab}

\NewDocumentCommand\xit{t\i t\t}{
   \IfBooleanTF{#1}%
      {\xititem}%
      {\IfBooleanTF{#2}{\xittab}{\xitenum}}%
}
\def\cpge@enumlabelprefix{}
\def\end@xlist{%
	\ifundef\cpge@listenv{}{\expandafter\end\expandafter{\cpge@xlistenv}}
}
\def\end@xlist@rec{%
   \ifundef\cpge@listenv{}{%
      \expandafter\end\expandafter{\cpge@xlistenv}%
		 \end@xlist@rec%
  }%
}%
\NewDocumentCommand\exit{!t- !t- !t- !t-}{
   \IfBooleanTF{#1}
      {%
         \end@xlist%
         \IfBooleanT{#2}
            {\end@xlist%
               \IfBooleanT{#3}{%
                     \end@xlist%
                      \IfBooleanT{#3}{%
                         \end@xlist}%
               }%
            }%
      }%
      {\end@xlist@rec}%
}
\NewDocumentCommand\cpgenewlist{ smmm }{
   \toks@listopts{#4}
   \IfBooleanF{#1}{
      \@xp\NewDocumentCommand\csname#2\endcsname{!E{\op}{{}}}
         {\@xp\xenum\@xp\op\@xp{\the\toks@listopts,##1}\def\cpge@xlistenv{#2}}
      \csdef{end#2}{\cpgelist@savecounter\endlist}
      \newcommand#3{\init@xlist{#2}\xit@enum}
   }
   \IfBooleanT{#1}{
      \@xp\NewDocumentCommand\csname#2\endcsname{!E{\op}{{}}}
         {\@xp\xitem\@xp\op\@xp{\the\toks@listopts,##1}\def\cpge@xlistenv{#2}}
      \cslet{end#2}\endlist
      \newcommand#3{\init@xlist{#2}\xit@item}
   }
}

%% Markup 
\cpgesetlabel{enumi}{|1|}
\cpgesetlabel{enumii}{|a|}
\cpgesetlabel{enumiii}{|i|}
\cpgesetlabel{section}{|I|}
\cpgesetlabel{subsection}{|A|}

\cpgesetdeco{enumi}{\bfseries #1.}
\cpgesetdeco{enumii}{\bfseries #1.}
\cpgesetdeco{enumiii}{(#1)}
\cpgesetdeco{section}{#1}
\cpgesetdeco{subsection}{#1}
%%%% Chargement de polices pour des symboles à utiliser avec {xitem}
\DeclareFontFamily{U}{FdSymbolA}{}
\DeclareFontShape{U}{FdSymbolA}{m}{n}{
    <-> s * [1] FdSymbolA-Book
}{}
\DeclareFontShape{U}{FdSymbolA}{m}{b}{
    <-> s * [1] FdSymbolA-Medium
}{}
\DeclareSymbolFont{fdsymbols}{U}{FdSymbolA}{m}{n}
\SetSymbolFont{fdsymbols}{bold}{U}{FdSymbolA}{m}{b}

\DeclareMathSymbol{\xdottriangleright}{\mathord}{fdsymbols}{9}
\DeclareMathSymbol{\xdottriangleup}{\mathord}{fdsymbols}{10}
\DeclareMathSymbol{\xdottriangleleft}{\mathord}{fdsymbols}{11}
\DeclareMathSymbol{\xdottriangledown}{\mathord}{fdsymbols}{12}
\DeclareMathSymbol{\xdotsquare}{\mathord}{fdsymbols}{13}
\DeclareMathSymbol{\xtrianglerightL}{\mathord}{fdsymbols}{86}
\DeclareMathSymbol{\xtriangleupL}{\mathord}{fdsymbols}{87}
\DeclareMathSymbol{\xtriangleleftL}{\mathord}{fdsymbols}{88}
\DeclareMathSymbol{\xtriangledownL}{\mathord}{fdsymbols}{89}
\DeclareMathSymbol{\xtriangleright}{\mathord}{fdsymbols}{90}
\DeclareMathSymbol{\xtriangleup}{\mathord}{fdsymbols}{91}
\DeclareMathSymbol{\xtriangleleft}{\mathord}{fdsymbols}{92}
\DeclareMathSymbol{\xtriangledown}{\mathord}{fdsymbols}{93}
\DeclareMathSymbol{\xcircle}{\mathord}{fdsymbols}{98}
\DeclareMathSymbol{\xbullet}{\mathord}{fdsymbols}{99}
\DeclareMathSymbol{\xsquareL}{\mathord}{fdsymbols}{117}
\DeclareMathSymbol{\xsquare}{\mathord}{fdsymbols}{118}
\DeclareMathSymbol{\xdiamondL}{\mathord}{fdsymbols}{131}
\DeclareMathSymbol{\xdiamond}{\mathord}{fdsymbols}{132}
\DeclareMathSymbol{\xstarL}{\mathord}{fdsymbols}{148}
\DeclareMathSymbol{\xstar}{\mathord}{fdsymbols}{149}
\DeclareMathSymbol{\xheart}{\mathord}{fdsymbols}{118}
\DeclareMathSymbol{\xspad}{\mathord}{fdsymbols}{185}
\DeclareMathSymbol{\xsuit}{\mathord}{fdsymbols}{186}

\RequirePackage{adforn}
\newcommand*\xheadarrowright{\adforn{43}}
\newcommand*\xheadarrowleft{\adforn{42}}

\def\label@itemi{\relsize{-2}$\xdiamond$}
\def\label@itemii{\relsize{-2}$\xsquare$}
\def\label@itemiii{\relsize{-2}$\xcircle$}
%%%% 
\DeclareDocumentCommand\disc@unite{mmd()}{
   \IfValueTF{#3}{\item[#1#3#2]}{\item}
}
\def\item@imp#1#2{\item[$#1\Rightarrow#2\,)$]} 
\def\item@equiv#1#2{\item[$#1\Leftrightarrow#2\,)$]} 
\NewDocumentEnvironment{discussion}{!e{\wd}}{%
	\def\unite{\disc@unite{}{~:~}}%
	\def\si{\disc@unite{Si\ }{~:~}}%
	\def\cas{\disc@unite{Cas où\ }{~:~}}
	\let\imp\item@imp
   \let\equ\item@equiv
	\def\cs{\item[$\Leftarrow\,)$]}
	\def\cn{\item[$\Rightarrow\,)$]}
	\list{}{%
		\IfNoValueTF{#1}
			{\labelwidth=\z@ \leftmargin=1pc \itemindent=-\leftmargin}
			{%
				\settowidth\leftmargin{#1}%
				\advance\leftmargin\labelsep%
				\labelwidth=\leftmargin%
				\itemindent\z@%
			}
    	\let\makelabel\discuss@label%
	}%
}{%
  \endlist
}
\def\discuss@label#1{%
	\hskip\labelsep%
	\ifblank{#1}
		{\makebox[\leftmargin-\labelsep][l]{\deco@discuss{}}}
		{\deco@discuss{#1}\hfil}%
	}
\cpgesetdeco{discuss}{$\bullet\;$ \bfseries\boldmath #1}
%% Pour compatibilite
\let\discuss\discussion
\let\enddiscuss\enddiscussion

%% Ajout 07/01/2024
%% Commande \unite pour utilisation dans theoremes et similaire
%% sans que l'utilisateur ait besoin d'initier une liste. 
%% C'est l'environnement qui s'en charge.
%% Il doit initier la commande \unite avec \def\unite{\first@unite}
%% dans le bloc d'ouverture.
%% et avoir \endlist dans le bloc de fermeture ou d'utiliser \closeunite. 
\let\thegobbler\@gobble
\cpge@cnt@shortcut{X}{gobbler}
\cpgedefcounter{unite}{|X|.|1|}(T)
\cpgesetdeco{unite}{\bfseries#1.}
\makethetolabel{unite}
\newif\ifinsideuniteenv
\def\unite@env{%
   \@enumdepth\@ne%
   \list\label@unite%
        {\usecounter{unite}%
         \listparindent\z@%
		   \labelwidth\z@%
		    \itemindent\labelsep%
		     \leftmargin\z@%
			   \let\makelabel\lab@unite%
        }%
 }
 \def\lab@unite#1{\ifblank{#1}{}{\deco@unite{#1}}}
 \def\closeunite{
   \ifinsideuniteenv%
      \endlist%
      \let\unite\relax%
      \insideuniteenvfalse%
   \fi%
}
 \def\first@unite{%   
   \insideuniteenvtrue
   \cpgesetlabel{enumii}{|T|.|1|}%
 	\cpgesetlabel{enumiii}{|q|.|a|}%
	\def\unite{\unite@}%
	\unite@env\unite%
 }
 \DeclareDocumentCommand\unite@{od()d<>}{%
	\IfValueTF{#1}
      {\if@staratend{#1}%
         {\cpgeref@setcounter{unite}{\x@arg-1}\item}%
         {\if@plusatend{#1}%
            {\cpgeref@addtocounter{unite}{\x@arg-1}\item}%
            {\item[#1]}%
      }}
      {\item}%
	\IfValueT{#2}{\deco@unitetitle{#2}}%
	\IfValueT{#3}{\IfValueF{#1}{\label{#3}}}%
}
\cpgesetdeco{unitetitle}{\textbf{#1~:~}}
\def\set@defaultforlistsinsideunite{%
	\def\unite{\first@unite}%
	\cpgesetenum*{1}{marge*}%
	\cpgesetenum*{2}{marge}%
	\cpgesetenum*{3}{marge*}%
	\cpgesetdeco{enumii}{\bfseries ##1.}%
	\cpgesetdeco{enumiii}{\bfseries ##1.}%
}

%%% Ajout 2020 
%%% environnement simple pour formater conditions et conséquences (obsolete)
\def\ccsi{\relsize{-2}$\xbullet\;$}
\def\blneutre{\relsize{-2}$\xsquare\;$}
\def\ccalors{\relsize{-2}$\xdiamond\;$}
\newdimen\ccleftmargin
\newdimen\ccrightmargin
\newdimen\ccsymbolwidth
\settowidth\ccsymbolwidth{\enskip\ccsi\;}
\def\ccjot{3pt}
\newif\ifccinsidetab
\newif\ifccvline
\settowidth\ccleftmargin{Si} 
\DeclareDocumentEnvironment{cond}{O{\ccleftmargin} O{l}}{%
	\ifhmode\par\else\leavevmode\fi%
	\extrarowheight3pt%
	\tabular[t]{@{}p{#1}@{\ccsi}#2@{}}%
	}
	{\endtabular\par\smallskip}
\DeclareDocumentEnvironment{cons}{O{\ccleftmargin} O{l}}{%
	\ifhmode\par\else\leavevmode\fi%
	\extrarowheight3pt%
	\tabular[t]{@{}p{#1}@{\ccalors}#2@{}}%
	}
	{\endtabular\par\smallskip}
\DeclareDocumentEnvironment{stab}{O{2cm} O{l}}{%
	\extrarowheight3pt%
	\tabular[t][t]{@{}p{#1}#2@{}}%
	}
	{\endtabular\par\smallskip}

%%% Ajout le 21/12/2023
%%% Environnement {condcons} plus évolué
%%% capable de mesurer les parties latérales du tableau. 
\NewDocumentCommand\line@tab{ D(){\ccneutre} somo }{%
   \tab@init%
   \IfValueT{#3}{#3}&#1\enskip\null&#4&\IfValueT{#5}{#5}%
   \IfBooleanF{#2}{\cr}%
}
\def\tab@init{%
   \ifccinsidetab\else%
      \ifccvline%
         \init@tab%
      \else%
         \init@tab@novline%
      \fi%
   \fi%
}
\def\init@tab{%
   \ifhmode\hfill\par\fi\addvspace{\smallskipamount}%
   \ccinsidetabtrue%
   \csuse{tabular*}{\linewidth-\@totalleftmargin}[t]
      {@{}p{\ccleftmargin}|r@{}
         p{\linewidth-\ccleftmargin-\ccrightmargin-\ccsymbolwidth
            -2\tabcolsep-\fboxrule}@{}%
         p{\ccrightmargin}@{}}%
}
\def\init@tab@novline{%
   \ifhmode\hfill\par\fi\addvspace{\smallskipamount}%
   \ccinsidetabtrue%
   \csuse{tabular*}{\linewidth-\@totalleftmargin}[t]
      {@{}p{\ccleftmargin}@{\enskip}@{}r@{}
         p{\linewidth-\ccleftmargin-\ccrightmargin-\ccsymbolwidth-1em}@{}
         p{\ccrightmargin}@{}}%
}

\def\close@tab{%
   \ifccinsidetab%
      \csuse{endtabular*}\par\addvspace{\medskipamount}%
      \ccinsidetabfalse%
   \fi}
\long\def\no@tab#1{\close@tab#1}
\def\first@linetab{%
   \close@tab%
   \def\linetab{\line@tab}%
   \linetab%
}
\def\first@cond{%
   \close@tab%
   \def\cond{\line@tab(\ccsi)}%
   \cond%
}
\def\first@cons{%
   \close@tab%
   \def\cons{\line@tab(\ccalors)}%
   \cons%
}
\def\break@tab{%
   \close@tab\ifccvline\init@tab\else\init@tab@novline\fi%
}
\def\symbol@measuring#1{%
   \setbox0\hbox{#1\enskip}%
   \ifdim\wd0>\ccsymbolwidth\relax\global\ccsymbolwidth\wd0\fi
}
\DeclareDocumentCommand\cc@measuring{ d()somo }{%
   \IfValueT{#3}{%}
      \setbox0\hbox{#3}%
      \ifdim\wd0>\ccleftmargin\relax\global\ccleftmargin\wd0\fi%
   }
   \IfValueT{#5}{%
      \setbox0\hbox{#5}%
       \ifdim\wd0>\ccrightmargin\relax\global\ccrightmargin\wd0\fi%
      }%
   \IfValueT{#1}{\symbol@measuring{#1}}
}
\long\def\condcons@measuring#1{%
   \@bsphack%
      \settowidth\ccsymbolwidth{\ccsi\enskip\null}
      \ccleftmargin\z@\relax\ccrightmargin\z@\relax%
      \def\cond{\cc@measuring}%
      \def\cons{\cc@measuring}%
      \def\linetab{\@ifnextchar(\cc@measuring{\cc@measuring(\ccneutre)}}%
      \let\breaktab\relax%
      \def\notab##1{}%
      \setbox0\vbox{\everypar{}#1}%
   \@esphack%
}
\NewDocumentEnvironment{condcons}{O{}+b}{%
   \dimdef\ccleftmargin@limit{.28\linewidth}%
   \dimdef\ccrightmargin@limit{.17\linewidth}%
   \symbol@measuring{\ccsi}%
   \symbol@measuring{\ccalors}%
   \cpgesetup[condcons]{#1}%
   \condcons@measuring{#2}%
   \ifdim\ccleftmargin>\ccleftmargin@limit\relax%
      \ccleftmargin=\ccleftmargin@limit%
   \fi%
   \ifdim\ccrightmargin>\ccrightmargin@limit\relax%
      \ccrightmargin=\ccrightmargin@limit%
   \fi%
	\extrarowheight=\ccjot\relax%
   \everymath{\displaystyle}%
   \let\breaktab\break@tab%
   \let\notab\no@tab%
   \def\linetab{\first@linetab}%
   \def\cond{\first@cond}%
   \def\cons{\first@cons}%
      #2 
   \close@tab%
}{}
\cpgesetup[condcons]{%
   l/.code=\dimdef\ccleftmargin@limit{#1},
   r/.code=\dimdef\ccrightmargin@limit{#1},
   s/.code=\dimdef\ccjot{#1},
   s/.default=3pt,
   f/.is if=ccvline
}

%%%% Ajout 11/02/24
%%%% Item sur un tableau
%%%%% tabenum
\newdimen\tablabelwidth
\newdimen\line@width
\newdimen\tabenum@width
\newif\ifin@field

\def\add@field{%
    \@stopfield%
    \ifdim\line@width>\dimexpr\wd\@curfield+\wd\@curline\else%
      \output@curline\fi%
    \cpge@dima\z@%
    \@whiledim\cpge@dima<\wd\@curfield%
      \do{\advance\cpge@dima\tabenum@width}%
    \addto@curline%     
     }
\def\output@curline{%
    \setbox\@curline\hbox{\strut\unhbox\@curline\unskip\unskip\unskip}%
    \noindent\box\@curline%
     \par%
   }
\def\addto@curline{%
   \setbox\@curline\hbox{%
      \box\@curline%
      \copy\@curfield%
      \hskip\dimexpr\cpge@dima-\wd\@curfield}%
   }
\def\new@field{%
   \ifin@field\add@field\fi%
   \@startfield\in@fieldtrue%
  }
\def\setup@tabenum{%
   \settowidth\tablabelwidth{\csname c@\tab@enum\endcsname=13\relax%
    	\csuse{deco@tabenum}{\csuse{label@\tab@enum}}}%
    \line@width\dimexpr\columnwidth-\@totalleftmargin\relax%
  	\tabenum@width\dimexpr\line@width/\num@tab\relax%
  	\line@width\dimexpr\tabenum@width*\num@tab\relax%
  }
\def\tabitem{%
 \refstepcounter{\tab@enum}\new@field%
 \hb@xt@\tablabelwidth{\csuse{deco@tabenum}{\csname label@\tab@enum\endcsname}\hss}\hskip\labelsep\relax%
}
\cpgesetdeco{tabenum}{\bfseries #1.}
\cpgesetup[lists]{
   tabenum/.is family, tabenum,
   s/.code={\parskip=#1},
   s/.default=\z@,
   n/.code=\cpgesetlabel{\tab@enum}{#1},
   d/.code=\cpgesetdeco*{tabenum}{#1}, d*/.style={},
   r/.style={},m/.style={},m*/.style={},m+/.style={}, a/.style={},
   columns/.code 2 args=\edef\num@tab{\ifcompact#1\else#2\fi},
   c/.style={columns=#1},
   columns/.default=23,
   s
}
\def\cpgesetuptabenum{\cpgesetup[tabenum]}
\NewDocumentCommand\tabenum{E{\op}{{}}}{%
   \advance\@enumdepth\@ne%
   \edef\cpge@listdepth{\the\@enumdepth}
   \edef\cpge@listlevel{\romannumeral\@enumdepth}%
   \edef\cpge@listctr{enum\cpge@listlevel}%
   \edef\tab@enum{enum\cpge@listlevel}%
   \def\cpge@listenv{enum}
   \def\cpge@xlistenv{tabenum}
   \partopsep\z@\topsep\z@\labelsep.33em%
   \def\\{\intertab{}}%
   \cpgesetuplists{tabenum,columns,#1}%
   \setup@tabenum%
   \csname c@\tab@enum\endcsname=\z@%
   \trivlist\item[]%
   \let\item\tabitem
}
\def\endtabenum{%
   \ifin@field\add@field%
   \noindent\unhbox\@curline\fi\endtrivlist%
} 
\long\def\intertab#1{%
    \add@field%
    \ifdim\wd\@curline=\z@\else%
       \output@curline%
     \fi%
     \noindent#1%
     \par\vskip-\parskip%
   }
\def\tabtest{\rule{\tabenum@width-\tablabelwidth-2\labelsep}{2pt}}

%%%%%% lrmargin and mini environments %%%%
%%%%%% Borrowed from adjustwidth.sty

\newenvironment{lrmargin}[3][]{%
  \advance\cpge@lrcount\@ne%
  \list\relax{%
    \topsep\smallskipamount%
    \listparindent\parindent%
    \parsep\parskip%
		\itemindent\z@\relax%
      \labelwidth\z@\relax%
		\itemindent\labelsep%
	 \ifnum\cpge@lrcount>\tw@%
		\leftmargin\z@\relax%
		\rightmargin\z@\relax%
	\else%
    	\ifblank{#2}{\leftmargin\z@}{\leftmargin=#2\relax}%
    	\ifblank{#3}{\rightmargin\z@}{\rightmargin=#3\relax}%
	\fi%
   \let\makelabel\lrmargin@label%
    }%
    \item[#1]\ignorespaces\set@defaultforlistsinsideunite}
 {\closeunite\endlist}
\def\lrmargin@label#1{%
	\ifblank{#1}{\relax}
				 {\csuse{deco@lrmargin}{#1}}%
	}
\cpgesetdeco{lrmargin}{\textbf{#1.}} 

\dimdef\lrmarginleft{\z@}
\dimdef\lrmarginright{\z@}
\cpgesetup[mini]{%
	left margin/.code=\dimdef{\lrmarginleft}{#1},
	right margin/.code=\dimdef{\lrmarginright}{#1},
   lm/.style={left margin=#1},
   rm/.style={right margin=#1},
	font/.code=\def\mini@font{#1},
	label font/.code=\def\mini@label@font{#1\vphantom{(}},
	deco/.code=\cpgesetdeco{lrmargin}{\mini@label@font#1},
}
\cpgesetup[mini]{%
	font=\sffamily\small,
	label font=\sffamily\small\scshape\bfseries,
	deco/.initial={#1.}
	}
\DeclareDocumentEnvironment{mini}{O{}m d()}{%
		\cpgesetup[mini]{#1}%
      \ifdim\leftmargin>3.4em\relax
         \let\lrmarginleft\z@
      \fi
		\lrmargin[\MakeLowercase{#2}\IfValueT{#3}{~:~#3}]
			{\lrmarginleft}
			{}%
		\mini@font%
	}{\endlrmargin}

\def\nb{\mini{n.b}}
\let\endnb\endmini
\def\dem{\mini{dem}}
\let\enddem\endmini
\def\ind{\mini{indication}}
\let\endind\endmini
\def\synt{\mini{synthèse}}
\let\endsynt\endmini 
\def\newmini#1#2{\csdef{#1}{\mini{#2}}\cslet{end#1}\endmini}

%%%%%% Ajout 17/07/2021 %%%%%%%%
%%%%% Pointillé 
\setlength{\ligneskip}{\baselineskip*\real{.33}}
\def\set@point@box{\setbox\cpge@boxb=\hbox{\deco@pointille\hss}}
\cpgesetdeco{pointille}{\textcolor{black!75}{\rule{.8pt}{.4pt}\hskip1.2pt}}
\def\lignes{\@ifstar\cpge@lign\cpge@lign@}
\def\cpge@lign@{\set@point@box%
	\hbox{}\vrule height \ligneskip width\z@\relax%
	 \xleaders\copy\cpge@boxb\hskip 0pt plus 1fill%
	  \vadjust{\vskip\ligneskip}%
	   \hbox{}\cpge@lign%
}
\def\cpge@lign#1{\set@point@box%
 	\par\addvspace{\ligneskip}
	\begingroup%
	 \foreach \x in{1,2,...,#1}
		{\hbox to \hsize {%
		  \mbox{}\xleaders\copy\cpge@boxb\hskip 0pt plus 1fill\relax
		  \vadjust{\vskip\ligneskip}\hbox{}}
		}
	\endgroup
	 \addvspace{\ligneskip*\real{2.0}}
}
\def\points{\@ifstar\cpge@point@@\cpge@point@}
\def\cpge@point@#1{\set@point@box%
		\hbox to #1{\xleaders\copy\cpge@boxb\hskip 0pt plus 1fill\hbox{}}}
\def\cpge@point@@#1{\set@point@box%
		\xleaders\copy\cpge@boxb\hskip 0pt plus 1fill\hbox{}\linebreak
		\hbox to #1{\xleaders\copy\cpge@boxb\hskip 0pt plus 1fill\hbox{}}%
}



\def\fntht{\fontcharht\font`}
\def\fntdp{\fontchardp\font`}
\def\fntwd{\fontcharwd\font`}
\newcommand\cpgesquare[1][x]{\rule{\fntht#1}{\fntht#1}}

%%%%%%%
%%%%%%%%%
\endinput

\let\action@parser\@firstofone
\def\generic@parser#1#2{%
   \IfSubStr{#2}{(}
      {\gen@parser{#1}#2}
      {\gen@parser@{#1}{#2}}%
 }
\def\gen@parser#1#2(#3){%
   \ifcsdef{#1@#2}
      {\expandafter\action@parser\expandafter{\csname#1@#2\endcsname{#3}}}
      {\ifcsdef{#2}
         {\ifcsdef{#1@#3}
            {\expandafter\action@parser\expandafter%
               {\csname#2\endcsname{\csname#1@#3\endcsname}}}
            {\expandafter\action@parser\expandafter%
               {\csname#2\endcsname}{#3}}%
         }
         {#2(#3)}%
       }%
    }

\def\gen@parser@#1#2{%
   \ifcsdef{#1@#2}
     {\expandafter\action@parser
       \expandafter{\csname#1@#2\endcsname{}}}
     {\ifcsdef{#2}
       {\action@parser{\csname#2\endcsname}}
         {\action@parser{#2}}%
     }%
  }

\long\def\Ifiscs#1{%
    \if\noexpand#1\relax
        \expandafter\@firstoftwo
    \else
        \ifcat\noexpand~\noexpand#1%
            \expandafter\expandafter
            \expandafter\@firstoftwo
        \else
            \expandafter\expandafter
            \expandafter\@secondoftwo
        \fi
    \fi
}
\def\mapcs#1{\Ifiscs#1{\forcsvlist{#1}}{}}
\def\mapscss#1#2{\Ifiscs#1{\forcsvlist}}

